/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package amazon.backend;

import amazon.backend.DAO.WorldMessageDao;
import amazon.backend.IO.WorldIO;
import amazon.backend.IO.WorldOutputListener;
import amazon.backend.manager.AckManager;
import amazon.backend.model.Product;
import amazon.backend.model.WorldMessage;
import amazon.backend.simpleups.UpsWorldIO;
import amazon.backend.simpleups.WorldUps;
import com.google.protobuf.CodedOutputStream;
import org.hibernate.SessionFactory;
import org.junit.jupiter.api.Test;
import protobuf.FrontBack;

import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

class AppTest {
    public WorldIO amazonIO;
    public UpsWorldIO upsWorldIO;
    public WorldOutputListener worldOutputListener;
    public SessionFactory sessionFactory = SingletonSessionFactory.getSessionFactory();
    public AckManager ackManager = AckManager.newInstance(sessionFactory);

    @Test
    public void test() throws IOException, InterruptedException {
        Thread webThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    Thread.sleep(1000);
                    Socket socket = new Socket("0.0.0.0", 2222);
                    FrontBack.Product product = FrontBack.Product.newBuilder()
                            .setIid(1).setCount(2).setDescription("3").build();
                    FrontBack.FBMessage order = FrontBack.FBMessage.newBuilder()
                            .setPid(1).setProducts(product).setX(3).setY(4).build();
                    byte[] data = order.toByteArray();
                    CodedOutputStream codedOutputStream = CodedOutputStream.newInstance(socket.getOutputStream());
                    codedOutputStream.writeUInt32NoTag(data.length);
                    codedOutputStream.writeRawBytes(data);
                    codedOutputStream.flush();

                    Thread.sleep(1000);
                    codedOutputStream.writeUInt32NoTag(data.length);
                    codedOutputStream.writeRawBytes(data);
                    codedOutputStream.flush();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                } catch (UnknownHostException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        webThread.start();

        App app = new App();
        app.start();

        wait(5000);
    }
}
